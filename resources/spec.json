{"names":{"ic2":{"name":"IndustrialCraft2","color":"#000000"},"computronics":{"name":"Computronics","color":"#55254A"},"energycontrol":{"name":"Energy Control","color":"#552530"},"logisticsbridge":{"name":"Logistics Bridge","color":"#222D4E"},"appliedenergistics2":{"name":"Applied Energistics 2","color":"#412452"}},"devices":[{"name":"AE Bridge","owner":"logisticsbridge","identifier":"logisticsbridge:bridge_(n)","id":"bridge","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"Crafting Manager","owner":"logisticsbridge","identifier":"logisticsbridge:craftingmanagerae_(n)","id":"craftingmanagerae","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"MFSU","owner":"ic2","identifier":"ic2:mfsu_(n)","id":"mfsu","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Radioisotope Heat Generator","owner":"ic2","identifier":"ic2:rt_heat_generator_(n)","id":"rt_heat_generator","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Fermenter","owner":"ic2","identifier":"ic2:fermenter_(n)","id":"fermenter","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"CESU","owner":"ic2","identifier":"ic2:cesu_(n)","id":"cesu","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Ore Washing Plant","owner":"ic2","identifier":"ic2:ore_washing_plant_(n)","id":"ore_washing_plant","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Generator","owner":"ic2","identifier":"ic2:generator_(n)","id":"generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Reactor Redstone Port","owner":"ic2","identifier":"ic2:reactor_redstone_port_(n)","id":"reactor_redstone_port","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getReactorCore()","return":"table","description":"Get a reference to the reactor's core"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Matter Fabricator","owner":"ic2","identifier":"ic2:matter_generator_(n)","id":"matter_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Radioisotope Thermoelectric Generator","owner":"ic2","identifier":"ic2:rt_generator_(n)","id":"rt_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Steam Kinetic Generator","owner":"ic2","identifier":"ic2:steam_kinetic_generator_(n)","id":"steam_kinetic_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Advanced Miner","owner":"ic2","identifier":"ic2:advanced_miner_(n)","id":"advanced_miner","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Scanner","owner":"ic2","identifier":"ic2:scanner_(n)","id":"scanner","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Recycler","owner":"ic2","identifier":"ic2:recycler_(n)","id":"recycler","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Condenser","owner":"ic2","identifier":"ic2:condenser_(n)","id":"condenser","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Compact Item Buffer","owner":"ic2","identifier":"ic2:item_buffer_2_(n)","id":"item_buffer_2","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Stirling Generator","owner":"ic2","identifier":"ic2:stirling_generator_(n)","id":"stirling_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Stirling Kinetic Generator","owner":"ic2","identifier":"ic2:stirling_kinetic_generator_(n)","id":"stirling_kinetic_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Magnetizer","owner":"ic2","identifier":"ic2:magnetizer_(n)","id":"magnetizer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Liquid Heat Exchanger","owner":"ic2","identifier":"ic2:liquid_heat_exchanger_(n)","id":"liquid_heat_exchanger","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Weighted Item Distributor","owner":"ic2","identifier":"ic2:weighted_item_distributor_(n)","id":"weighted_item_distributor","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Crop-Matron","owner":"ic2","identifier":"ic2:cropmatron_(n)","id":"cropmatron","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Charge Pad (CESU)","owner":"ic2","identifier":"ic2:chargepad_cesu_(n)","id":"chargepad_cesu","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Kinetic Generator","owner":"ic2","identifier":"ic2:kinetic_generator_(n)","id":"kinetic_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Solar Generator","owner":"ic2","identifier":"ic2:solar_generator_(n)","id":"solar_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Teleporter","owner":"ic2","identifier":"ic2:teleporter_(n)","id":"teleporter","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Geothermal Generator","owner":"ic2","identifier":"ic2:geo_generator_(n)","id":"geo_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Pump","owner":"ic2","identifier":"ic2:pump_(n)","id":"pump","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Blast Furnace","owner":"ic2","identifier":"ic2:blast_furnace_(n)","id":"blast_furnace","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Reactor Coolant Injector (RSH)","owner":"ic2","identifier":"ic2:rci_rsh_(n)","id":"rci_rsh","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Electric Heater","owner":"ic2","identifier":"ic2:electric_heat_generator_(n)","id":"electric_heat_generator","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Wind Mill","owner":"ic2","identifier":"ic2:wind_generator_(n)","id":"wind_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Crop Harvester","owner":"ic2","identifier":"ic2:crop_harvester_(n)","id":"crop_harvester","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Solar Distiller","owner":"ic2","identifier":"ic2:solar_distiller_(n)","id":"solar_distiller","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Charge Pad (BatBox)","owner":"ic2","identifier":"ic2:chargepad_batbox_(n)","id":"chargepad_batbox","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Liquid Fuel Firebox","owner":"ic2","identifier":"ic2:fluid_heat_generator_(n)","id":"fluid_heat_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"LV Transformer","owner":"ic2","identifier":"ic2:lv_transformer_(n)","id":"lv_transformer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Water Mill","owner":"ic2","identifier":"ic2:water_generator_(n)","id":"water_generator","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Metal Former","owner":"ic2","identifier":"ic2:metal_former_(n)","id":"metal_former","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Mass Fabricator","owner":"ic2","identifier":"ic2:mass_fabricator_(n)","id":"mass_fabricator","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Steam Generator","owner":"ic2","identifier":"ic2:steam_generator_(n)","id":"steam_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Electric Motor","owner":"ic2","identifier":"ic2:electric_kinetic_generator_(n)","id":"electric_kinetic_generator","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Industrial Workbench","owner":"ic2","identifier":"ic2:industrial_workbench_(n)","id":"industrial_workbench","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Water Turbine","owner":"ic2","identifier":"ic2:water_kinetic_generator_(n)","id":"water_kinetic_generator","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Block Cutter","owner":"ic2","identifier":"ic2:block_cutter_(n)","id":"block_cutter","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"EV Transformer","owner":"ic2","identifier":"ic2:ev_transformer_(n)","id":"ev_transformer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Macerator","owner":"ic2","identifier":"ic2:macerator_(n)","id":"macerator","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Fluid/Solid Canning Machine","owner":"ic2","identifier":"ic2:canner_(n)","id":"canner","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Fluid Regulator","owner":"ic2","identifier":"ic2:fluid_regulator_(n)","id":"fluid_regulator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Bottling Plant","owner":"ic2","identifier":"ic2:fluid_bottler_(n)","id":"fluid_bottler","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Terraformer","owner":"ic2","identifier":"ic2:terraformer_(n)","id":"terraformer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Charge Pad (MFSU)","owner":"ic2","identifier":"ic2:chargepad_mfsu_(n)","id":"chargepad_mfsu","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Creative Generator","owner":"ic2","identifier":"ic2:creative_generator_(n)","id":"creative_generator","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."}]},{"name":"Charge Pad (MFE)","owner":"ic2","identifier":"ic2:chargepad_mfe_(n)","id":"chargepad_mfe","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Bronze Tank","owner":"ic2","identifier":"ic2:bronze_tank_(n)","id":"bronze_tank","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Extractor","owner":"ic2","identifier":"ic2:extractor_(n)","id":"extractor","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Weighted Fluid Distributor","owner":"ic2","identifier":"ic2:weighted_fluid_distributor_(n)","id":"weighted_fluid_distributor","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Steel Tank","owner":"ic2","identifier":"ic2:steel_tank_(n)","id":"steel_tank","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Pattern Storage","owner":"ic2","identifier":"ic2:pattern_storage_(n)","id":"pattern_storage","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Reactor Access Hatch","owner":"ic2","identifier":"ic2:reactor_access_hatch_(n)","id":"reactor_access_hatch","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getReactorCore()","return":"table","description":"Get a reference to the reactor's core"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Thermal Centrifuge","owner":"ic2","identifier":"ic2:centrifuge_(n)","id":"centrifuge","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Batbox","owner":"ic2","identifier":"ic2:batbox_(n)","id":"batbox","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Fluid Distributor","owner":"ic2","identifier":"ic2:fluid_distributor_(n)","id":"fluid_distributor","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Electric Furnace","owner":"ic2","identifier":"ic2:electric_furnace_(n)","id":"electric_furnace","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Induction Furnace","owner":"ic2","identifier":"ic2:induction_furnace_(n)","id":"induction_furnace","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Nuclear Reactor","owner":"ic2","identifier":"ic2:nuclear_reactor_(n)","id":"nuclear_reactor","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Batch Crafter","owner":"ic2","identifier":"ic2:batch_crafter_(n)","id":"batch_crafter","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Manual Kinetic Generator","owner":"ic2","identifier":"ic2:manual_kinetic_generator_(n)","id":"manual_kinetic_generator","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Semifluid Generator","owner":"ic2","identifier":"ic2:semifluid_generator_(n)","id":"semifluid_generator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Reactor Coolant Injector (LZH)","owner":"ic2","identifier":"ic2:rci_lzh_(n)","id":"rci_lzh","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"UU Assembly Bench","owner":"ic2","identifier":"ic2:uu_assembly_bench_(n)","id":"uu_assembly_bench","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Electric Sorting Machine","owner":"ic2","identifier":"ic2:sorting_machine_(n)","id":"sorting_machine","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Iridium Tank","owner":"ic2","identifier":"ic2:iridium_tank_(n)","id":"iridium_tank","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Steam Repressurizer","owner":"ic2","identifier":"ic2:steam_repressurizer_(n)","id":"steam_repressurizer","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Wind Turbine","owner":"ic2","identifier":"ic2:wind_kinetic_generator_(n)","id":"wind_kinetic_generator","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Iron Tank","owner":"ic2","identifier":"ic2:iron_tank_(n)","id":"iron_tank","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Solid Canning Machine","owner":"ic2","identifier":"ic2:solid_canner_(n)","id":"solid_canner","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Tank","owner":"ic2","identifier":"ic2:tank_(n)","id":"tank","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Tesla Coil","owner":"ic2","identifier":"ic2:tesla_coil_(n)","id":"tesla_coil","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."}]},{"name":"Compressor","owner":"ic2","identifier":"ic2:compressor_(n)","id":"compressor","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"HV Transformer","owner":"ic2","identifier":"ic2:hv_transformer_(n)","id":"hv_transformer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Item Buffer","owner":"ic2","identifier":"ic2:item_buffer_(n)","id":"item_buffer","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Replicator","owner":"ic2","identifier":"ic2:replicator_(n)","id":"replicator","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Miner","owner":"ic2","identifier":"ic2:miner_(n)","id":"miner","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Trade-O-Mat","owner":"ic2","identifier":"ic2:trade_o_mat_(n)","id":"trade_o_mat","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Energy-O-Mat","owner":"ic2","identifier":"ic2:energy_o_mat_(n)","id":"energy_o_mat","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Iron Furnace","owner":"ic2","identifier":"ic2:iron_furnace_(n)","id":"iron_furnace","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"MV Transformer","owner":"ic2","identifier":"ic2:mv_transformer_(n)","id":"mv_transformer","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"MFE","owner":"ic2","identifier":"ic2:mfe_(n)","id":"mfe","functions":[{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getEUStored()","return":"int","description":"The amount of EU currently stored"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getEUOutput()","return":"number","description":"The maximum EU output per tick"},{"name":".getEUCapacity()","return":"int","description":"The maximum amount of EU that can be stored"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"}]},{"name":"Electrolyzer","owner":"ic2","identifier":"ic2:electrolyzer_(n)","id":"electrolyzer","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Solid Fuel Firebox","owner":"ic2","identifier":"ic2:solid_heat_generator_(n)","id":"solid_heat_generator","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Reactor Fluid Port","owner":"ic2","identifier":"ic2:reactor_fluid_port_(n)","id":"reactor_fluid_port","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getReactorCore()","return":"table","description":"Get a reference to the reactor's core"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Chunk Loader","owner":"ic2","identifier":"ic2:chunk_loader_(n)","id":"chunk_loader","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Spatial Pylon","owner":"appliedenergistics2","identifier":"appliedenergistics2:spatial_pylon_(n)","id":"spatial_pylon","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Cell Workbench","owner":"appliedenergistics2","identifier":"appliedenergistics2:cell_workbench_(n)","id":"cell_workbench","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Quartz Grindstone","owner":"appliedenergistics2","identifier":"appliedenergistics2:grindstone_(n)","id":"grindstone","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Inscriber","owner":"appliedenergistics2","identifier":"appliedenergistics2:inscriber_(n)","id":"inscriber","functions":[{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"ME Chest","owner":"appliedenergistics2","identifier":"appliedenergistics2:chest_(n)","id":"chest","functions":[{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"Dense Energy Cell","owner":"appliedenergistics2","identifier":"appliedenergistics2:dense_energy_cell_(n)","id":"dense_energy_cell","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Condenser","owner":"appliedenergistics2","identifier":"appliedenergistics2:condenser_(n)","id":"condenser","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Energy Acceptor","owner":"appliedenergistics2","identifier":"appliedenergistics2:energy_acceptor_(n)","id":"energy_acceptor","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Vibration Chamber","owner":"appliedenergistics2","identifier":"appliedenergistics2:vibration_chamber_(n)","id":"vibration_chamber","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"Energy Cell","owner":"appliedenergistics2","identifier":"appliedenergistics2:energy_cell_(n)","id":"energy_cell","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Fluid Interface","owner":"appliedenergistics2","identifier":"appliedenergistics2:fluid_interface_(n)","id":"fluid_interface","functions":[{"name":".getTanks(side?: string)","parameters":[{"name":"side","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all tanks on this side"},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".pullFluid(fromName: string, limit?: int, fluid?: string)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"fluid","type":"string","description":"Is optional"}],"return":"int","description":"Pull fluid to this tank from another tank. Returns the amount transferred."},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".pushFluid(toName: string, limit?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"limit","type":"int","description":"Is optional"}],"return":"string):int","description":"Push fluid from this tank to another tank. Returns the amount transferred."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"}]},{"name":"ME Drive","owner":"appliedenergistics2","identifier":"appliedenergistics2:drive_(n)","id":"drive","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"Spatial IO Port","owner":"appliedenergistics2","identifier":"appliedenergistics2:spatial_io_port_(n)","id":"spatial_io_port","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"ME Controller","owner":"appliedenergistics2","identifier":"appliedenergistics2:controller_(n)","id":"controller","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Molecular Assembler","owner":"appliedenergistics2","identifier":"appliedenergistics2:molecular_assembler_(n)","id":"molecular_assembler","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"ME Interface","owner":"appliedenergistics2","identifier":"appliedenergistics2:interface_(n)","id":"interface","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"ME IO Port","owner":"appliedenergistics2","identifier":"appliedenergistics2:io_port_(n)","id":"io_port","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"ME Security Terminal","owner":"appliedenergistics2","identifier":"appliedenergistics2:security_station_(n)","id":"security_station","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"(1/4/16/64k) Crafting Storage","owner":"appliedenergistics2","identifier":"appliedenergistics2:crafting_storage_(n)","id":"crafting_storage","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Crafting Unit","owner":"appliedenergistics2","identifier":"appliedenergistics2:crafting_unit_(n)","id":"crafting_unit","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Crafting Monitor","owner":"appliedenergistics2","identifier":"appliedenergistics2:crafting_monitor_(n)","id":"crafting_monitor","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Charger","owner":"appliedenergistics2","identifier":"appliedenergistics2:charger_(n)","id":"charger","functions":[{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".size()","return":"int","description":"The size of the inventory"},{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"}]},{"name":"Quartz Growth Accelerator","owner":"appliedenergistics2","identifier":"appliedenergistics2:quartz_growth_accelerator_(n)","id":"quartz_growth_accelerator","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Creative Energy Cell","owner":"appliedenergistics2","identifier":"appliedenergistics2:creative_energy_cell_(n)","id":"creative_energy_cell","functions":[{"name":".getNodeEnergyUsage()","return":"number","description":"Get the energy usage of this AE node"},{"name":".findItem(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search for an item in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".findItems(item: string|table)","parameters":[{"name":"item","type":"string|table","description":""}],"return":"table","description":"Search all items in the network. You can specify the item as a string, with or without the damage value ('minecraft:stone' or 'minecraft:stone@0') or as a table with 'name', 'damage' and 'nbthash' fields. You must specify the 'name', but you can leave the other fields empty."},{"name":".listAvailableItems()","return":"table","description":"List all items which are stored in the network"},{"name":".getNetworkEnergyUsage()","return":"number","description":"Get the energy usage of this AE network"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getCraftingCPUs()","return":"table","description":"List all crafting cpus in the network"},{"name":".getNetworkEnergyStored()","return":"int","description":"Get the energy stored usage in this AE network"}]},{"name":"Radar","owner":"computronics","identifier":"radar_(n)","id":"radar","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Ticket Machine","owner":"computronics","identifier":"ticket_machine_(n)","id":"ticket_machine","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Digital Controller Box","owner":"computronics","identifier":"digital_controller_box_(n)","id":"digital_controller_box","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Advanced Cipher Block","owner":"computronics","identifier":"advanced_cipher_(n)","id":"advanced_cipher","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Digital Signal Receiver Box","owner":"computronics","identifier":"digital_receiver_box_(n)","id":"digital_receiver_box","functions":[{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."}]},{"name":"Cipher Block","owner":"computronics","identifier":"cipher_(n)","id":"cipher","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Digital Locomotive Relay","owner":"computronics","identifier":"locomotive_relay_(n)","id":"locomotive_relay","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Tape Drive","owner":"computronics","identifier":"tape_drive_(n)","id":"tape_drive","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"(Creative) Chat Box","owner":"computronics","identifier":"chat_box_(n)","id":"chat_box","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Iron Note Block","owner":"computronics","identifier":"iron_noteblock_(n)","id":"iron_noteblock","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Camera","owner":"computronics","identifier":"camera_(n)","id":"camera","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Colorful Lamp","owner":"computronics","identifier":"colorful_lamp_(n)","id":"colorful_lamp","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Speech Box","owner":"computronics","identifier":"speech_box_(n)","id":"speech_box","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"AFSU","owner":"energycontrol","identifier":"energycontrol:afsu_(n)","id":"afsu","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Kit Assembler","owner":"energycontrol","identifier":"energycontrol:kit_assembler_(n)","id":"kit_assembler","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Energy Counter","owner":"energycontrol","identifier":"energycontrol:energy_counter_(n)","id":"energy_counter","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSourceTier()","return":"int","description":"The tier of this EU source. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".getOfferedEnergy()","return":"number","description":"EU output provided per tick"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Remote Thermal Monitor","owner":"energycontrol","identifier":"energycontrol:remote_thermo_(n)","id":"remote_thermo","functions":[{"name":".getDemandedEnergy()","return":"number","description":"The maximum amount of EU that can be received"},{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getSinkTier()","return":"int","description":"The tier of this EU sink. 1 = LV, 2 = MV, 3 = HV, 4 = EV etc."},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]},{"name":"Range Trigger","owner":"energycontrol","identifier":"energycontrol:range_trigger_(n)","id":"range_trigger","functions":[{"name":".suck(slot?: int, limit?: int)","parameters":[{"name":"slot","type":"int","description":"Is optional"},{"name":"limit","type":"int","description":"Is optional"}],"return":"int","description":"Suck an item from the ground"},{"name":".getDocs(name?: string)","parameters":[{"name":"name","type":"string","description":"Is optional"}],"return":"string|table","description":"Get the documentation for all functions or the function specified. Errors if the function cannot be found."},{"name":".getItemMeta(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The metadata of the item in the specified slot. The slot number starts from 1."},{"name":".getMetadata()","return":"table","description":"Get metadata about this object"},{"name":".pullItems(fromName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"fromName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Pull items to this inventory from another inventory. Returns the amount transferred."},{"name":".getTransferLocations(location?: string)","parameters":[{"name":"location","type":"string","description":"Is optional"}],"return":"table","description":"Get a list of all available objects which can be transferred to or from"},{"name":".drop(slot: int, limit?: int, direction?: string)","parameters":[{"name":"slot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"direction","type":"string","description":"Is optional"}],"return":"int","description":"Drop an item on the ground. Returns the number of items dropped"},{"name":".pushItems(toName: string, fromSlot: int, limit?: int, toSlot?: int)","parameters":[{"name":"toName","type":"string","description":""},{"name":"fromSlot","type":"int","description":""},{"name":"limit","type":"int","description":"Is optional"},{"name":"toSlot","type":"int","description":"Is optional"}],"return":"int","description":"Push items from this inventory to another inventory. Returns the amount transferred."},{"name":".list()","return":"table","description":"List all items in this inventory"},{"name":".getItem(slot: int)","parameters":[{"name":"slot","type":"int","description":""}],"return":"table|nil","description":"The item in the specified slot. The slot number starts from 1."},{"name":".size()","return":"int","description":"The size of the inventory"}]}]}